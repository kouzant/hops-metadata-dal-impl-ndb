/*
 * Copyright (C) 2016 Hops.io
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/* 
 * File:   GenericMsg.h
 * Author: Konstantin Popov <kost@sics.se>
 *
 */

#ifndef GENERICMSG_H
#define GENERICMSG_H

/**
 * @addtogroup AsyncUpdateEventHandling
 *
 * @{
 */

#include "common.h"

/// GenericMsg is the base class for messages that are generated by
/// "listeners" and processed by "message handlers". Note that, in
/// general, "listeners" and "message handlers" may or may not be
/// executed by the same thread.
///
/// GenericMsg is parameterized by a superclass, which can allow in
/// particular to separate message processing code from the
/// implementation of scalable message processing with multiple
/// listener- and message handling threads. See AsyncMsgBase.h for
/// details.
///
/// The GenericMsg generic base class, as one would expect, is empty -
/// but it "connects" the inheritance hierarchy between classes of
/// particular message types, and the MsgHandlingBase superclass
/// supporting message handling, like message queuing for asynchronous
/// processing.
template<class TopClass, template<typename C> class MsgHandlingBase>
class GenericMsg : public MsgHandlingBase<TopClass> {};

/// The "trivial" MsgHandlingBase class.
template<class TopClass>
class MsgHandlingBase {};

#endif // GENERICMSG_H
